#include<limits.h>
#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>
struct E
{
int src,des,we;
};
struct G
{
int V,E;
struct E *e;
};
struct G* creatG(int V,int E)
{
struct G* g=(struct G*)malloc(sizeof(struct G));
g->V=V;
g->E=E;
g->e=(struct E*)malloc(sizeof(struct E));
return g;
}void printarr(int dis[],int n)
{
int i;
printf("Vertex\t\tDistance from source\n");
for(i=0;i<n;i++)
printf("%d\t\t%d\n",i,dis[i]);
}
void BellmanFord(struct G *g,int src)
{
int i,j;
int V=g->V;
int E=g->E;
int dis[' '];
for(i=0;i<V;i++)
dis[i]=INT_MAX;
dis[src]=0;
for(i=1;i<V-1;i++)
{
for(j=0;j<E;j++)
{
int u=g->e[j].src;
int v=g->e[j].des;
int w=g->e[j].we;
if(dis[u] != INT_MAX && dis[u]+w < dis[v])
dis[v]=dis[u]+w;
}
}
/*for(i=0;i<E;i++)
{
int u=g->e[i].src;
int v=g->e[i].des;
int w=g->e[i].we;
if(dis[u] != INT_MAX && dis[u]+w < dis[v])
printf("Graph contains negative weight cycle\n");
} */
printarr(dis,V);
return;
}
int main()
{int i=0,V=5,E=8,s,d,w;
struct G *g=creatG(V,E);
//clrscr();
printf("Bellman Ford\n");
printf("------------\n");
for(;i<E;i++)
{
printf("Enter the values for edge %d\n",i);
printf("Source: "); scanf("%d",&s);
printf("Distination: "); scanf("%d",&d);
printf("Weight: "); scanf("%d",&w);
g->e[i].src=s;
g->e[i].des=d;
g->e[i].we=w;
}
BellmanFord(g,0);
return 0;
}
